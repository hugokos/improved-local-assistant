name: ci

on:
  push: { branches: [main] }
  pull_request: {}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]  # add windows-latest, macos-latest later if needed
        python: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: 
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            requirements.txt
      - run: pip install -e .[dev]
      - run: pip install pytest pytest-cov
      - name: Lint
        run: |
          pip install ruff black
          ruff check .
          black --check .
      - name: Type check
        run: |
          pip install mypy
          mypy src || echo "Type checking completed with issues"
      - name: Test (with coverage)
        run: pytest -q --cov=improved_local_assistant --cov-report=xml tests/test_basic.py
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          verbose: true

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: 
          python-version: '3.12'
          cache: 'pip'
      - run: pip install -e .
      - name: Dependency audit
        uses: pypa/gh-action-pip-audit@v1.1.0
      - name: Bandit (static security)
        run: |
          pip install bandit
          bandit -q -r src

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety

    - name: Run security checks with bandit
      run: bandit -r src/ -f json -o bandit-report.json || true

    - name: Check dependencies with safety
      run: safety check --json --output safety-report.json || true

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[docs]"

    - name: Build documentation
      run: |
        mkdocs build --strict

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site