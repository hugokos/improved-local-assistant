name: ci

on:
  push:
    branches: [main]
  pull_request: {}

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dev dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Pre-commit hooks
        run: pre-commit run --all-files
      - name: Lint with ruff
        run: ruff check .
      - name: Format check with black
        run: black --check .

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install dev dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Type check with mypy
        run: mypy src

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Run tests with coverage
        run: pytest -q --cov=improved_local_assistant --cov-report=xml --fail-under=70
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install security tools
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
      - name: Run Bandit security scan
        run: bandit -r src/ -ll
      - name: Run Safety dependency scan
        run: safety check --full-report
      - name: Run secret scan with gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}